package days07;

// 메서드를 사용하는 두번째 목적
// 명령들의 단순 실행이 아닌 소정의 값을 연산하기 위한 명령들의 반복실행
// 예 : 사각형의 넓이를 계산하는 메서드, 삼각형의 넓이를 계산하는 메서드
// 예 : 성적표를 양식에 맞게 출력하는 메서드, 달력을 양식에 맞게 출력하는 메서드


// 두번째 목적에 필요한 메서드를 그들이 실행되기 위해, 필요한 값들이 있습니다
// 사각형의 넓이는 밑변의 길이와 높이가 필요
// 성적표는 국어, 영어, 수학, 총점, 평균이 필요
// 달력은 년 과 월이 필요
// 두번째 목적으로 함수를 만들려면 필요한 값들을 함수에 전달하고 실행되게 해야 합니다
// 호출한 곳에서 넣어주는 값을 전달인수라고 부르고,
// 메서드에서 전달된 값을 받아주는 변수를 매개변수라고 부릅니다

public class Method02 {

	public static void main(String[] args) { // main을 실행해서 각 메서드를 main내에서 실행 시킴으로써 main 외에 다른 메서드를 사용 가능.
		int n;
		n = 100;
		System.out.println("main 메서드의 지역변수 값 n : " + n);
		myPrint1();
		myPrint2(300); // 300 : 전달인수
		myPrint2(n); // 전달인수로 변수를 넣으면 변수가 전달되는것이 아니라 변수에 저장된 값의 복사본이 전달됩니다.  (n = 100;)
		// 메서드는 정의된 형태로 호출해야 정상 호출이 됩니다
		// myPrint2(100,200,300);  // 에러 - 정의된 메서드의 호출에 맞지 않은 호출은 에러
		
		myPrint3(100,200,300);
		// 매개변수의 갯수와 자료형이 다른 메서드가 필요하다면 추가로 정의하여 사용합니다.
	}
	
	//myPrint3 Method
	public static void myPrint3(int a, int b, int c) {
		// 매개변수가 여러개라고 해서 하나의 int로 여러 변수를 동시선언하면 안됩니다
		// 매개변수 int a, b, c X
		System.out.println("전달받은 매개변수의 값 a : " + a + ", b : " + b + ", c : " + c);
	}
	// 전달인수와 매개변수는 자료형과 갯수, 그리고 순서도 모두 일치해야 합니다. 정수형 자료 위치 -> 실수형 자료 X
	
	//myPrint1 Method
	public static void myPrint1() {
		int n;
		n = 200;
		System.out.println("myPrint 메서드의 지역변수 값 n : " + n);
	}
	
	// 매개 변수의 선언
	/* public static void 메서드 이름( 자료형 매개변수이름, 자료형 매개변수이름 ... ){
	 
	}*/
	// 괄호안에 변수를 선언하고 쓰는 형식, 매개변수 또한 필요한 갯수 만큼 선언해서 사용할 수 있습니다
	
	// 매개변수 : 메서드 호출시 메서드가 필요로하는 데이터를 전달해줄수 있는 매개역할의 변수
	// 메서드 호출 시 괄호안에 넣어주는 데이터 : 전달인수
	// 메서드의 몸체에서 괄호안에 위치하면 전달된 값을 받아주는 변수 : 매개변수
	//myPrint2 Method
	public static void myPrint2( int n ) { // n : 매개변수
		System.out.println("myPrint2메서드의 매개변수의 값 n : " + n);
	}

}
