package days09;

//번호  이름    국어   영어  수학   총점   평균
//----------------------------------------------
// 1   홍길동    78     89    76    256    78.2
// 2   홍길동    78     89    76    256    78.2
// 3   홍길동    78     89    76    256    78.2

// 1단계 : 각 자료를 각각의 낱개의 자료로 취급
// 2단계 : 위 표에서 자료를 열별로 묶어서 같은 자료형끼리, 관련 자료형끼리 묶어서 취급(관련자료들을 그룹으로)
// 3단계 : C언어의 구조체(Struct) 사용(여러 자료형을 갖는 자료하 그룹으로 취급)
// 4단계 : 구조체 그룹에 기능적인 면을 추가해서 그 차제만으로도 프로그램으로 사용할 수 있게 취급. 자료와 메서드가 하나로

// 클래스(Class)
// 프로그램으로 처리하고자 하는 대상을 자료화하여 하나의 자료형으로 정의한 사용자 정의 자료형
// 쉽게 말해 필요에 의해 기본자료형(int, double, char 등)외에 그들을 그룹화하여 새롭게 정의 한 자료형입니다.
// 한 개 이상의 자료, 하나 이상의 자료형을 저장할 수 있는 복합자료형
// 활용되기 이전까지는 정의만되어 있는 클래스는 정의영역(설계도, 원본)입니다.

// 그동안 사용해오던 클래스 : Scanner 등

// 자바의 프로그램 단위는 클래스입니다.
// 하나의 프로그램 파일(XXXXX.java) 안에는 여러개의 클래스를 넣어서 사용할 수 있습니다
// 여러개의 클래스 중 파일이름과 같은 이름을 쓰는 클래스를 public 으로 지정합니다
// 그 클래스 내에는 보통 public static void main(){} 이 존재합니다
// 그말은 다시말해 XXXXX.java 파일안에는 XXXXX 이름의 클래스가 반드시 존재해야한다는 뜻이기도합니다.
// public 이면서 main 을 갖고 있는 클래스는 자료형으로서의 클래스이기 보단 프로그램 실행단위로서의 클래스입니다.
// 그 외 앞으로 우리가 만들어서 사용하거나, import 해서 사용할 클래스가 자료저장 & 가공용 클래스입니다

// class 만드는 법 : class 라는 키워드를 이용하여 만듭니다

class 클래스이름{  // class 클래스이름 한글로 써도 무방하지만 en-coding할때 깨질 수도 있기 때문에 영어로 쓰길 권장합니다.
	// 중괄호안에 필요한 변수들을 선언하고 사용합니다.
	int 변수1;
	double 변수2;
	String 변수3;
	int [] 배열변수1 = new int[5];
	// 멤버, 멤버필드, 속성, 멤버변수, 필드 등.... -> 클래스 안에 선언한 변수를 이렇게들 부릅니다
	
	// 클래스내부에는 클래스 전용으로만 사용할 수 있는 멤버 메서드가 있습니다
	public void 메서드1() {
		
	}// 멤버 메서드
	
	// 멤버 메서드는 대부분(특별한 경우를 제외하고) static 키워드를 사용하지 않습니다.
	// static 으로 만들어진 메서드안에서 호출할일이 아직은 없기 때문에 static을 붙이지 않습니다.
	public static void 메서드2() {
		
	}
}

// 실제 클래스 생성
class First{
	int n1;
	int n2;
} // first 라는 이름의 자료형이 생성되었습니다.
public class Class01 {

	public static void main(String[] args) {
		
		// 자료형(클래스)을 생성되었다는건 아래와 같이 그 자료형의 변수를 만들어 사용하겠다는 뜻
		First a1;  // 생성된 변수는 레퍼런스(참조)변수입니다.
		
		// 배열때와 마찬가지로, new 명령을 이용하여 Heap 영역에 적정 공간(클래스가 정의된 크기만큼)을 확보 후 그 주소를 a1 변수에 저장하여
		// 사용합니다.
		a1 = new First();  // new First[] X []는 배열생성때만 사용합니다
		// 레퍼런스 변수와 new 에 의해 만들어진 공간이 합쳐지면, 이를 객체라고 부릅니다.
		
		// 공간이 할당되면 이제부터 n1, n2 변수가 a1이라는 이름과 함께 사용이가능합니다
		First a2 = new First();
		// 객체가 두개가 만들어졌다면 각각의 객체의 n1, n2 가 존재하는 셈입니다.
		
		// a1에 있는 n1 n2와 n2 에 a2에 있는 n1 n2를 구분하기위해 참조변수이름을 앞에 붙여서 사용합니다
		// a1.n1   a1.n2   a2.n1   a2.n2
		
		System.out.println(a1.n1);
		System.out.println(a1.n2);
		a2.n1 = 30;
		a2.n2 = 40;
		System.out.println(a2.n1);
		System.out.println(a2.n2);
		
	}

}
