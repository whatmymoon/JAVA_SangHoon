package days01;

public class Print02 {

	public static void main(String[] args) {
		
		// 출력하고자 하는 내용을 " " 안에 자유롭게 구성하여 출력할 수 있습니다.
		// 숫자와 문자가 조합된 출력물을 화면에 출력합니다.
		// 키보드가 허락하는 한 어떤 내용이든 구성하여 출력할 수 있습니다.
		System.out.printf("56 x 69 = 1234\n");
		
		// 이스케이프 문자 % : 아직 출력의 내용으로 결정되지 않은 데이터의 출력자리를 마련하는 문자입니다.
		// 출력될 내용의 자료형에 따라 %d : 정수, %f : 실수, %s : 문자열 등 으로 표기합니다.
		// 그리고 그자리에 출력될 내용은 "" 가 끝난 후 뒤에 컴마로  구분하고 써서 매칭되도록합니다.
		System.out.printf("56 x 69 = %d\n" , 1234);
		// 자바에서 문자형 자료는 " " 안에 쓰여지고 따옴표 없이 사용되는 자료들은 정수, 실수 들로 인식합니다.
		
		System.out.printf("56 x 69 = %d\n", 56*69);
		// 간단한 연산을 컴퓨터에게 시키고, 그 결과를 내가 출력하려는 구문에 끼워서 출력할 수 있습니다.
		System.out.printf("56.5 x 69.3 = %f\n", 56.5 * 69.3);
		System.out.printf("56 x 69 = %s\n", "삼천팔백육십사" );
		
		// % 이스케이프 문자는 갯수에 상관없이 필요한 만큼 여러개를 구성하여 사용이 가능합니다.
		System.out.printf("%d x %d = %d\n", 23 , 87 , 23*87);
		// " " 안의 % 갯수와 순서대로 출력될 데이터를 (,)컴마로 구분하여 나열하면 순서대로 매칭 출력됩니다.
		// 소수점이 있는 실수의 출력
		System.out.printf("%d ÷ %d = %f\n", 27, 13, 27/13.0);
		// ÷ : 출력되기 위한 연산기호. 실제 연산과는 무관
		// / : 실제 연산을 위한 연산기호.
		// 덧셈 : + , 뺄셈 : - , 곱셈 : * , 나눗셈 : /
		
		// 출력양식기호(d, s, f 등)와 실제 데이터 자료형이 맞지 않으면 일부 에러를 발생시킵니다.
		// System.out.printf("%d\n", 23.45); 	// 에러
		// System.out.printf("%f\n", 23);			// 에러
		
		// 소수점을 조절하여 출력하려면 아래와 같이 씁니다.
		System.out.printf("%d ÷ %d = %.2f\n", 27, 13, 27/13.0);
		// 소수점 조절에 의해 자리수가 조절되고, 없어지는 곳은 반올림됩니다. - 위는 소수점 셋째자리에서 반올림.
	}

}
